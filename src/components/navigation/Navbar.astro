---
const currentPath = Astro.url.pathname;
---

<nav
  id="navbar"
  class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 ease-in-out navbar-default"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="text-black font-display text-xl tracking-tight">
          SOLARIS <span class="text-orange-500">SOFTWARE</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-8">
          <a
            href="/services/"
            class={`font-ui text-sm font-medium transition-colors duration-200 ${
              currentPath === "/services"
                ? "text-orange-500"
                : "text-black hover:text-orange-400"
            }`}
          >
            Services
          </a>
          <a
            href="/projects/"
            class={`font-ui text-sm font-medium transition-colors duration-200 ${
              currentPath === "/projects"
                ? "text-orange-500"
                : "text-black hover:text-orange-400"
            }`}
          >
            Projects
          </a>
          <a
            href="/testimonials/"
            class={`font-ui text-sm font-medium transition-colors duration-200 ${
              currentPath === "/testimonials"
                ? "text-orange-500"
                : "text-black hover:text-orange-400"
            }`}
          >
            Testimonials
          </a>
          <a
            href="/team/"
            class={`font-ui text-sm font-medium transition-colors duration-200 ${
              currentPath === "/team"
                ? "text-orange-500"
                : "text-black hover:text-orange-400"
            }`}
          >
            Team
          </a>
          <a
            href="/contact/"
            class={`font-ui text-sm font-medium transition-colors duration-200 ${
              currentPath === "/contact"
                ? "text-orange-500"
                : "text-black hover:text-orange-400"
            }`}
          >
            Contact
          </a>
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          id="mobile-menu-button"
          type="button"
          class="text-black hover:text-orange-400 focus:outline-none focus:text-orange-400 transition-colors duration-200"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Hamburger icon -->
          <svg
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div
    class="md:hidden"
    id="mobile-menu"
    style="display: none; opacity: 0; transform: translateY(-10px);"
  >
    <div
      class="px-4 pt-2 pb-3 space-y-1 bg-black bg-opacity-98 backdrop-blur-md shadow-lg"
    >
      <a
        href="/services/"
        class={`block px-3 py-2 rounded-md font-ui text-base font-medium transition-colors duration-200 ${
          currentPath === "/services"
            ? "text-orange-500 bg-orange-500 bg-opacity-10"
            : "text-white hover:text-orange-400 hover:bg-orange-400 hover:bg-opacity-10"
        }`}
      >
        Services
      </a>
      <a
        href="/projects/"
        class={`block px-3 py-2 rounded-md font-ui text-base font-medium transition-colors duration-200 ${
          currentPath === "/projects"
            ? "text-orange-500 bg-orange-500 bg-opacity-10"
            : "text-white hover:text-orange-400 hover:bg-orange-400 hover:bg-opacity-10"
        }`}
      >
        Projects
      </a>
      <a
        href="/testimonials/"
        class={`block px-3 py-2 rounded-md font-ui text-base font-medium transition-colors duration-200 ${
          currentPath === "/testimonials"
            ? "text-orange-500 bg-orange-500 bg-opacity-10"
            : "text-white hover:text-orange-400 hover:bg-orange-400 hover:bg-opacity-10"
        }`}
      >
        Testimonials
      </a>
      <a
        href="/team/"
        class={`block px-3 py-2 rounded-md font-ui text-base font-medium transition-colors duration-200 ${
          currentPath === "/team"
            ? "text-orange-500 bg-orange-500 bg-opacity-10"
            : "text-white hover:text-orange-400 hover:bg-orange-400 hover:bg-opacity-10"
        }`}
      >
        Team
      </a>
      <a
        href="/contact/"
        class={`block px-3 py-2 rounded-md font-ui text-base font-medium transition-colors duration-200 ${
          currentPath === "/contact"
            ? "text-orange-500 bg-orange-500 bg-opacity-10"
            : "text-white hover:text-orange-400 hover:bg-orange-400 hover:bg-opacity-10"
        }`}
      >
        Contact
      </a>
    </div>
  </div>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const navbar = document.getElementById("navbar");
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    let isScrolled = false;

    // Handle scroll events for background change
    function handleScroll() {
      const scrollTop =
        window.pageYOffset || document.documentElement.scrollTop;
      const shouldHaveBackground = scrollTop > 50;

      if (shouldHaveBackground !== isScrolled) {
        isScrolled = shouldHaveBackground;

        if (isScrolled) {
          navbar?.classList.add("navbar-scrolled");
        } else {
          navbar?.classList.remove("navbar-scrolled");
        }
      }
    }

    // Handle mobile menu toggle with smooth animation
    function toggleMobileMenu() {
      const isOpen = mobileMenu?.style.display !== "none";

      if (mobileMenu) {
        if (isOpen) {
          // Close menu
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";
          setTimeout(() => {
            mobileMenu.style.display = "none";
          }, 200);
        } else {
          // Open menu
          mobileMenu.style.display = "block";
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";

          // Force reflow
          mobileMenu.offsetHeight;

          mobileMenu.style.opacity = "1";
          mobileMenu.style.transform = "translateY(0)";
        }
      }
      mobileMenuButton?.setAttribute("aria-expanded", String(!isOpen));
    }

    // Event listeners
    window.addEventListener("scroll", handleScroll, { passive: true });
    mobileMenuButton?.addEventListener("click", toggleMobileMenu);

    // Close mobile menu when clicking on links
    const mobileLinks = mobileMenu?.querySelectorAll("a");
    mobileLinks?.forEach((link) => {
      link.addEventListener("click", () => {
        if (mobileMenu && mobileMenu.style.display !== "none") {
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";
          setTimeout(() => {
            mobileMenu.style.display = "none";
          }, 200);
        }
        mobileMenuButton?.setAttribute("aria-expanded", "false");
      });
    });

    // Close mobile menu when clicking outside
    document.addEventListener("click", (event) => {
      const target = event.target as Element;
      if (mobileMenu?.style.display !== "none" && !navbar?.contains(target)) {
        if (mobileMenu) {
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";
          setTimeout(() => {
            mobileMenu.style.display = "none";
          }, 200);
        }
        mobileMenuButton?.setAttribute("aria-expanded", "false");
      }
    });

    // Handle escape key to close mobile menu
    document.addEventListener("keydown", (event) => {
      if (event.key === "Escape" && mobileMenu?.style.display !== "none") {
        if (mobileMenu) {
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";
          setTimeout(() => {
            mobileMenu.style.display = "none";
          }, 200);
        }
        mobileMenuButton?.setAttribute("aria-expanded", "false");
      }
    });

    // Initial scroll check
    handleScroll();
  });
</script>

<style>
  /* Default navbar state - subtle backdrop for visibility */
  .navbar-default {
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  /* Scrolled navbar state - solid white background */
  .navbar-scrolled {
    background: rgba(255, 255, 255, 0.95) !important;
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    box-shadow:
      0 1px 3px 0 rgba(0, 0, 0, 0.1),
      0 1px 2px 0 rgba(0, 0, 0, 0.06);
  }

  .navbar-scrolled a {
    color: #1f2937 !important;
  }

  .navbar-scrolled a:hover {
    color: #ff3d00 !important;
  }

  .navbar-scrolled a.text-orange-500 {
    color: #ff3d00 !important;
  }

  .navbar-scrolled button {
    color: #1f2937 !important;
  }

  .navbar-scrolled button:hover {
    color: #ff3d00 !important;
  }

  /* Mobile menu improvements */
  #mobile-menu {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 1px;
  }

  /* Ensure proper touch targets on mobile */
  @media (max-width: 768px) {
    .navbar-default,
    .navbar-scrolled {
      padding-top: env(safe-area-inset-top);
    }

    #mobile-menu a {
      min-height: 44px;
      display: flex;
      align-items: center;
    }

    #mobile-menu-button {
      min-height: 44px;
      min-width: 44px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }

  /* Animation for mobile menu */
  #mobile-menu {
    transition: all 0.2s ease-in-out;
  }
</style>
