---
import Layout from "@/layouts/Layout.astro";
import services from "@/content/services.json";
import ServiceHero from "@/components/services/ServiceHero.svelte";
import ServiceFeatureCard from "@/components/services/ServiceFeatureCard.svelte";
import ServiceDetails from "@/components/services/ServiceDetails.svelte";

export function getStaticPaths() {
  return services.map((service) => ({
    params: { id: service.id },
    props: { service },
  }));
}

const { service } = Astro.props;

// Split long description into sections based on the format in services.json
const sections = service["long-description"].split(/(?<=\.) (?=[A-Z])/);
---

<Layout title={`${service.title} | SOLARIS`}>
  <main class="relative min-h-screen pt-24">
    <!-- Background Effects -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div
        class="absolute w-[120%] h-[120%] -left-[10%] -top-[10%] bg-gradient-radial from-[#ff3d00]/5 via-transparent to-transparent opacity-30 blur-3xl"
      >
      </div>
      <div
        class="absolute w-full h-px top-1/2 left-0 bg-gradient-to-r from-transparent via-[#ff3d00]/10 to-transparent"
      >
      </div>
      <div
        class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-zinc-900/50 via-zinc-900/80 to-zinc-900/90"
      >
      </div>
    </div>

    <div class="container mx-auto px-6 md:px-8 max-w-7xl relative z-10">
      <ServiceHero
        client:load
        title={service.title}
        description={service.description}
      />

      <ServiceFeatureCard client:visible features={service.features} />

      <ServiceDetails client:visible sections={sections} />
    </div>
  </main>
</Layout>

<style>
  @keyframes slideFromLeft {
    from {
      transform: translateX(-100px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .animate-slideFromLeft {
    animation: slideFromLeft 1s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    opacity: 0;
  }

  .animate-slideUp {
    animation: slideUp 1s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    opacity: 0;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-300 {
    animation-delay: 0.3s;
  }
</style>
