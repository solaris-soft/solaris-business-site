---
import Layout from "@/layouts/Layout.astro";
import services from "@/content/services.json";

export function getStaticPaths() {
  return services.map((service) => ({
    params: { id: service.id },
    props: { service },
  }));
}

const { service } = Astro.props;

// Split long description into sections based on the format in services.json
const sections = service["long-description"].split(/(?<=\.) (?=[A-Z])/);
---

<Layout title={`${service.title} | SOLARIS`}>
  <main class="relative min-h-screen pt-24">
    <!-- Background Effects -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div
        class="absolute w-[120%] h-[120%] -left-[10%] -top-[10%] bg-gradient-radial from-[#ff3d00]/5 via-transparent to-transparent opacity-30 blur-3xl"
      >
      </div>
      <div
        class="absolute w-full h-px top-1/2 left-0 bg-gradient-to-r from-transparent via-[#ff3d00]/10 to-transparent"
      >
      </div>
      <div
        class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-zinc-900/50 via-zinc-900/80 to-zinc-900/90"
      >
      </div>
    </div>

    <div class="container mx-auto px-6 md:px-8 max-w-7xl relative z-10">
      <!-- Hero Section -->
      <section
        class="flex flex-col items-center justify-center py-16 md:py-24 text-center"
      >
        <a
          href="/services"
          class="group text-white/70 hover:text-white transition-colors mb-12 flex items-center gap-2 border border-white/10 px-4 py-2 rounded-full hover:border-white/30"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5 transition-transform group-hover:-translate-x-1"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L4.414 9H17a1 1 0 110 2H4.414l5.293 5.293a1 1 0 010 1.414z"
              clip-rule="evenodd"></path>
          </svg>
          Back to Services
        </a>
        <div class="space-y-6 max-w-4xl">
          <h1
            class="text-[clamp(2.5rem,5vw,4rem)] font-black relative mb-6 animate-slideFromLeft bg-gradient-to-r from-white to-white/70 bg-clip-text text-transparent"
          >
            {service.title}
          </h1>
          <p
            class="text-[clamp(1.1rem,1.5vw,1.3rem)] text-white/70 leading-relaxed max-w-[60ch] mx-auto relative animate-slideUp"
          >
            {service.description}
          </p>
        </div>
      </section>

      <!-- Features Grid -->
      <section
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16 animate-slideUp animation-delay-200"
      >
        {
          service.features.map((feature) => (
            <div class="group bg-white/[0.03] backdrop-blur-xl rounded-2xl p-8 border border-white/10 hover:border-[#ff3d00]/50 transition-all duration-300 hover:bg-white/[0.05]">
              <h3 class="text-xl font-semibold mb-3 group-hover:text-[#ff3d00] transition-colors">
                {feature}
              </h3>
              <div class="h-1 w-12 bg-gradient-to-r from-[#ff3d00] to-[#ff3d00]/30 rounded-full transform origin-left scale-x-0 group-hover:scale-x-100 transition-transform duration-300" />
            </div>
          ))
        }
      </section>

      <!-- Detailed Description -->
      <section
        class="max-w-4xl mx-auto pb-24 animate-slideUp animation-delay-300"
      >
        {
          sections.map((section) => (
            <p class="text-lg text-white/80 mb-8 leading-relaxed backdrop-blur-sm bg-white/[0.02] p-6 rounded-xl border border-white/5">
              {section.trim()}
            </p>
          ))
        }
      </section>
    </div>
  </main>
</Layout>

<style>
  @keyframes slideFromLeft {
    from {
      transform: translateX(-100px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .animate-slideFromLeft {
    animation: slideFromLeft 1s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    opacity: 0;
  }

  .animate-slideUp {
    animation: slideUp 1s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    opacity: 0;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-300 {
    animation-delay: 0.3s;
  }
</style>
