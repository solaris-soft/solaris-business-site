---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";

const projects = await getCollection("projects");
---

<Layout title="Projects | SOLARIS">
  <main class="relative min-h-screen pt-24 bg-black">
    <!-- Background Effects -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div
        class="absolute w-[150%] md:w-[120%] h-[150%] md:h-[120%] -left-[25%] md:-left-[10%] -top-[25%] md:-top-[10%] bg-gradient-radial from-[#ff3d00]/5 via-transparent to-transparent opacity-30 blur-3xl"
      >
      </div>
      <div
        class="absolute w-full h-px top-1/2 left-0 bg-gradient-to-r from-transparent via-[#ff3d00]/10 to-transparent"
      >
      </div>
    </div>

    <div class="container mx-auto px-4 sm:px-6 md:px-8 max-w-7xl relative z-10">
      <!-- Header Section -->
      <section
        class="flex flex-col items-center justify-center py-16 md:py-24 text-center"
      >
        <h1 class="text-[clamp(3rem,6vw,4.5rem)] font-black relative mb-6">
          <span class="animate-slideFromLeft inline-block">Our</span>
          <div
            class="bg-gradient-to-r from-[#ff3d00] to-[#ff8a00] bg-clip-text text-transparent animate-slideFromRight inline-block ml-4"
          >
            Projects
          </div>
        </h1>

        <p
          class="text-[clamp(1.1rem,1.5vw,1.3rem)] text-white/70 leading-relaxed max-w-[60ch] relative py-8 opacity-0 animate-slideUp"
        >
          Discover our portfolio of innovative solutions.
          <span
            class="hidden md:block absolute -left-12 top-1/2 w-8 h-px bg-gradient-to-r from-[#ff3d00] to-transparent"
          ></span>
          <span
            class="hidden md:block absolute -right-12 top-1/2 w-8 h-px bg-gradient-to-l from-[#ff3d00] to-transparent"
          ></span>
        </p>
      </section>

      <!-- Projects Grid -->
      <section
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 xl:gap-10 pb-24"
        id="projects-grid"
      >
        {
          projects.map((project, index) => (
            <a
              href={project.data.link}
              target="_blank"
              rel="noopener noreferrer"
              class="group relative bg-white/[0.03] backdrop-blur-sm rounded-2xl overflow-hidden transition-all duration-300 hover:-translate-y-2 hover:bg-white/[0.06] border border-white/[0.05] opacity-0"
            >
              <div class="absolute inset-0 bg-gradient-to-br from-[#ff3d00]/10 to-[#ff8a00]/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />

              {project.data.image && (
                <div class="aspect-[16/10] overflow-hidden">
                  <img
                    src={project.data.image.src}
                    alt={project.data.title}
                    class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                    loading="lazy"
                  />
                </div>
              )}

              <div class="p-8">
                <h2 class="text-2xl font-bold mb-3 bg-gradient-to-r from-[#ff3d00] to-[#ff8a00] bg-clip-text text-transparent">
                  {project.data.title}
                </h2>
                <p class="text-white text-base leading-relaxed mb-6">
                  {project.data.description}
                </p>

                <div class="flex items-center text-sm font-medium">
                  <span class="bg-gradient-to-r from-[#ff3d00] to-[#ff8a00] bg-clip-text text-transparent">
                    View Project
                  </span>
                  <svg
                    class="w-5 h-5 ml-2 transition-transform duration-300 group-hover:translate-x-2"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M4 12H20M20 12L14 6M20 12L14 18"
                      stroke="url(#gradient)"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    />
                    <defs>
                      <linearGradient
                        id="gradient"
                        x1="4"
                        y1="12"
                        x2="20"
                        y2="12"
                        gradientUnits="userSpaceOnUse"
                      >
                        <stop stop-color="#ff3d00" />
                        <stop offset="1" stop-color="#ff8a00" />
                      </linearGradient>
                    </defs>
                  </svg>
                </div>
              </div>
            </a>
          ))
        }
      </section>
    </div>
  </main>
</Layout>

<style>
  @keyframes slideFromLeft {
    from {
      transform: translateX(-100px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideFromRight {
    from {
      transform: translateX(100px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .animate-slideFromLeft {
    animation: slideFromLeft 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  .animate-slideFromRight {
    animation: slideFromRight 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  .animate-slideUp {
    animation: slideUp 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  #projects-grid > a {
    animation: slideUp 0.6s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  #projects-grid > a:nth-child(1) {
    animation-delay: 0.3s;
  }
  #projects-grid > a:nth-child(2) {
    animation-delay: 0.4s;
  }
  #projects-grid > a:nth-child(3) {
    animation-delay: 0.5s;
  }
  #projects-grid > a:nth-child(4) {
    animation-delay: 0.6s;
  }
  #projects-grid > a:nth-child(5) {
    animation-delay: 0.7s;
  }
  #projects-grid > a:nth-child(6) {
    animation-delay: 0.8s;
  }
</style>
